import Head from 'next/head'
import Image from 'next/image'

import Workexp from '../components/workexp';
import Projects from '../components/projects';

import Container from 'react-bootstrap/Container';
import Row from 'react-bootstrap/Row';
import Col from 'react-bootstrap/Col';

import styles from '../styles/Home.module.css'

import {workExps, projList} from '../data/data'

export default function Home({workExpProps, projListProps}) {

  return (
    <Container>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Row>
        <Col>
          <h1 className={styles.title}>
            Welcome to <a href="https://nextjs.org">Next.js!</a>
          </h1>

          <p className={styles.description}>
            Get started by editing{' '}
            <code className={styles.code}>pages/index.js</code>
          </p>
        </Col>
      </Row>
      <Row>
        <Col>
          <h2 class="text-center my-4">Work Experiences</h2>
          {
            workExpProps.map((exp, index) => <Workexp key={index} exp={exp} /> )
          }
        </Col>
      </Row>

      <Row>
        <Col>
          <h2 class="text-center my-4">Projects</h2>
        </Col>
      </Row>

      <Row>
        {
          projListProps.map((proj, index) => <Col xs={12} md={4} className="mb-4"><Projects key={index} proj={proj} /></Col> )
        }
      </Row>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </Container>
  )
}

export const getStaticProps = async () => {
  return {
    props: {
      workExpProps: workExps,
      projListProps: projList
    }
  }
}